{{ n >= 2 }}

best = 1;
max = -1;
i = 1;
while (i <= n) {
    a[i] ~ lap(1 / e) + q[i];
    if (a[i] > max) then {
        best = i;
        max = a[i];
    }
    i = i + 1;
}

{{ for i . ((i >= 1) & ( i <= n)) => (a[best] > q[i] - (1/e) * log(n/beta)) }}
